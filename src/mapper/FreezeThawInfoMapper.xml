<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trsd.mapper.FreezeThawInfoMapper" >
  <resultMap id="BaseResultMap" type="com.trsd.entities.FreezeThawInfo" >
    <!--          -->
    <id column="freeze_thaw_id" property="freezeThawId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="account" property="account" jdbcType="DECIMAL" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="freeze_time" property="freezeTime" jdbcType="TIMESTAMP" />
    <result column="thaw_time" property="thawTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--          -->
    freeze_thaw_id, user_id, account, type, status, freeze_time, thaw_time, create_time, 
    update_time, version, flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--          -->
    select 
    <include refid="Base_Column_List" />
    from t_freeze_thaw
    where freeze_thaw_id = #{freezeThawId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--          -->
    delete from t_freeze_thaw
    where freeze_thaw_id = #{freezeThawId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.trsd.entities.FreezeThawInfo" keyProperty="id">
    <!--          -->
    insert into t_freeze_thaw (freeze_thaw_id, user_id, account, 
      type, status, freeze_time, 
      thaw_time, create_time, update_time, 
      version, flag)
    values (#{freezeThawId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{account,jdbcType=DECIMAL}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{freezeTime,jdbcType=TIMESTAMP}, 
      #{thawTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=BIGINT}, #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.trsd.entities.FreezeThawInfo" >
    <!--          -->
    insert into t_freeze_thaw
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="freezeThawId != null" >
        freeze_thaw_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="freezeTime != null" >
        freeze_time,
      </if>
      <if test="thawTime != null" >
        thaw_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="freezeThawId != null" >
        #{freezeThawId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="account != null" >
        #{account,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="freezeTime != null" >
        #{freezeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thawTime != null" >
        #{thawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trsd.entities.FreezeThawInfo" >
    <!--          -->
    update t_freeze_thaw
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="freezeTime != null" >
        freeze_time = #{freezeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thawTime != null" >
        thaw_time = #{thawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where freeze_thaw_id = #{freezeThawId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.trsd.entities.FreezeThawInfo" >
    <!--          -->
    update t_freeze_thaw
    set user_id = #{userId,jdbcType=BIGINT},
      account = #{account,jdbcType=DECIMAL},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      freeze_time = #{freezeTime,jdbcType=TIMESTAMP},
      thaw_time = #{thawTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT},
      flag = #{flag,jdbcType=INTEGER}
    where freeze_thaw_id = #{freezeThawId,jdbcType=BIGINT}
  </update>
</mapper>